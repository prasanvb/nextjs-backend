generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER 
  ADMIN  
}

model User {
  id      Int       @id @default(autoincrement())
  email   String?   @unique           // ? optianl field with null values
  name    String    @map("fullName")  // @map updates column name 
  role    Role?     @default(USER)    // values must be from enum
 
  profile Profile?  
  posts   Post[]    
  
  @@map("Users")    // @@map updates table name 
   

  @@unique([name, role])  // combination of values must be unique
  @@index([id, email])
} 

model Profile {
  id          Int         @id @default(autoincrement())
  bio         String        
  userId      Int         @unique

  user        User        @relation(fields: [userId], references: [id])
}

model Post {
  id            Int         @id @default(autoincrement())
  authorId      Int?
  title         String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  published     Boolean     @default(false)
  likeNum       Int         @default(0) @map("likes")
  
  author        User?       @relation(fields: [authorId], references: [id])
  catgories     Category[] 
}

model Category{
  id        Int       @id @default(autoincrement())
  name      String    
  posts     Post[]    
}



// multiple primary keys example
model Username {
  firstname     String
  lastname      String
  address   UserAddress?

  @@id([firstname, lastname])
}

model UserAddress {
  id              Int       @id
  userFirstname   String    
  userLastname    String    
  
  username        Username  @relation(fields: [userFirstname, userLastname], references: [firstname, lastname])

  @@unique([userFirstname, userLastname])
}